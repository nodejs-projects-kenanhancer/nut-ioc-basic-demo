swagger: '2.0'
info:
  version: 1.0.1
  title: Form Builder API v2
host: localhost:8080
basePath: /formbuilder-api/v1
schemes:
  - http
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
paths:
  /auth/signin/{appid}:
    post:
      summary: Sign in with credential
      operationId: controllers.authService.signin
      parameters:
        - $ref: '#/parameters/appid'
        - $ref: '#/parameters/credential'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AccessToken'
        '401':
          description: Unauthorized
  /auth/signout/{appid}:
    post:
      summary: Sign out from the application
      operationId: controllers.authService.signout
      parameters:
        - $ref: '#/parameters/x-bw-token'
        - $ref: '#/parameters/appid'
      responses:
        '200':
          description: Success
  /auth/signup:
    post:
      summary: Create or update a user
      operationId: controllers.authService.signup
      parameters:
        - $ref: '#/parameters/user'
      responses:
        '200':
          description: Success
  /forms/{appid}:
    get:
      summary: Returns the forms by application
      operationId: controllers.elementsService.getForms
      parameters:
        - $ref: '#/parameters/x-bw-token'
        - $ref: '#/parameters/appid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Element'
        default:
          description: Some kind of error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /elements/{appid}:
    get:
      summary: Returns array of the element
      operationId: controllers.elementsService.getElements
      parameters:
        - $ref: '#/parameters/x-bw-token'
        - $ref: '#/parameters/appid'
        - $ref: '#/parameters/pageid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Element'
        default:
          description: Some kind of error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      summary: Update existing elements or add new element to elements
      operationId: controllers.elementsService.saveElements
      parameters:
        - $ref: '#/parameters/x-bw-token'
        - $ref: '#/parameters/appid'
        - $ref: '#/parameters/elements'
      responses:
        '200':
          description: Success
        '405':
          description: Invalid input
        default:
          description: Some kind of error
          schema:
            $ref: '#/definitions/ErrorResponse'
parameters:
  appid:
    name: appid
    in: path
    required: true
    type: string
    enum:
      - OPENSTOCK
      - BWOPERATIONS
  pageid:
    name: pageid
    in: header
    type: string
    required: true
  elements:
    name: 'elements'
    in: 'body'
    description: 'List of element object'
    required: true
    schema:
      type: 'array'
      items:
        $ref: '#/definitions/Element'
  credential:
    name: 'credential'
    in: 'body'
    description: User credential
    required: true
    schema:
      $ref: '#/definitions/Credential'
  user:
    name: 'user'
    in: 'body'
    description: User
    required: true
    schema:
      $ref: '#/definitions/User'
  x-bw-token:
    name: x-bw-token
    in: header
    type: string
    required: true

definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  AccessToken:
    type: object
    required:
      - token
    properties:
      token:
        type: string
  User:
    type: object
    required:
      - username
      - password
      - fullname
    properties:
      username:
        type: string
      password:
        type: string
      fullname:
        type: string
  Credential:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
        description: User name
      password:
        type: string
        description: Password
  Element:
    type: object
    required:
      - appId
      - Id
      - elementType
    properties:
      appId:
        type: string
        description: Application Id
      pageId:
        type: string
        description: Form Id
      Id:
        type: string
        description: Element Id
      parentId:
        type: string
        description: Parent Element's Id
      elementType:
        type: string
        description: Element Type
        enum:
          - component
          - container
      containerType:
        type: string
        enum:
          - row
          - col
          - form
          - tabs
          - tab
      componentType:
        type: string
        enum:
          - input
          - inputsearch
          - select
          - datepicker
          - daterangepicker
          - timepicker
          - radio
          - checkbox
          - switch
          - label
          - tabbar
          - textarea
      index:
        type: integer
        description: Index
      inline:
        type: boolean
        description: Inline Label
      border:
        type: string
      borderColor:
        type: string
      bgColor:
        type: string
      textColor:
        type: string
      name:
        type: string
      title:
        type: object
        properties:
          EN:
            type: string
          TR:
            type: string
          DE:
            type: string
          FR:
            type: string
      items:
        type: array
        items:
          type: object
      required:
        type: boolean
      isFullWidth:
        type: boolean
      validationEnabled:
        type: boolean
      validation:
        type: object
        properties: {}
      dataType:
        type: string
        enum:
          - string
          - number
          - boolean
          - datetime
      trueValue:
        type: string
      falseValue:
        type: string
